<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ltsznh.modules.sys.dao.SysUserDao">
    <select id="queryObject" resultType="com.ltsznh.modules.sys.entity.SysUserEntity">
		select *,creator as creator_id,modifier as modifier_id from sys_user where user_id = #{value}
	</select>

    <select id="queryList" resultType="com.ltsznh.modules.sys.entity.SysUserEntity">
        select ROW_NUMBER() OVER(
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by u.${sidx} ${order}
            </when>
            <otherwise>
                order by u.user_id desc
            </otherwise>
        </choose>
        ) AS ROW_NUM,
        u.*,(select d.dept_name from sys_dept d where d.dept_id = u.dept_id) deptName
        ,creator as creator_id,modifier as modifier_id
        ,(SELECT username FROM sys_user where u.creator = user_id) as creator_name
        ,(SELECT username FROM sys_user where u.modifier = user_id) as modifier_name
        from sys_user u
        <where>
            <if test="username != null and username.trim() != ''">
                and u.username like concat('%',#{username},'%')
            </if>
            <if test="phone != null and phone.trim() != ''">
                and u.phone like concat('%',#{phone},'%')
            </if>
            <if test="deptId != null and deptId.trim() != ''">
                and u.dept_id = #{deptId}
            </if>
            <if test="isEnabled != null and isEnabled.trim() != ''">
                and u.is_enabled = #{isEnabled}
            </if>
            <!--  数据过滤  -->
            ${filterSql}
        </where>
        ORDER BY ROW_NUM
        <if test="offset != null and limit != null">
            OFFSET #{offset} ROWS
            FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from sys_user u
        <where>
            <if test="username != null and username.trim() != ''">
                and u.username like concat('%',#{username},'%')
            </if>

            <!--  数据过滤  -->
            ${filterSql}
        </where>
    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
		where ur.user_id = #{userId}
	</select>

    <select id="queryByUserName" resultType="com.ltsznh.modules.sys.entity.SysUserEntity">
		select * from sys_user where username = #{username}
	</select>

    <select id="queryByPhone" resultType="com.ltsznh.modules.sys.entity.SysUserEntity">
		select * from sys_user where phone = #{phone} and is_enabled = 1
	</select>

    <insert id="save" parameterType="com.ltsznh.modules.sys.entity.SysUserEntity" useGeneratedKeys="true"
            keyProperty="userId">
		insert into sys_user
		(
			username,
			password,
			salt,
			email,
			phone,
			is_enabled,
			dept_id,
			creator
		)
		values
		(
			#{username}, 
			#{password},
			#{salt},
			#{email}, 
			#{phone},
			#{isEnabled},
			#{deptId},
			#{creatorId}
		)
	</insert>

    <update id="update" parameterType="com.ltsznh.modules.sys.entity.SysUserEntity">
        update sys_user
        <set>modify_date = getdate(),
            <if test="modifierId != null">modifier = #{modifierId},</if>
            <if test="isEnabled != null">is_enabled = #{isEnabled},</if>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </set>
        where user_id = #{userId}
    </update>

    <update id="updatePassword" parameterType="map">
		update sys_user set password = #{newPassword}
			where user_id = #{userId} and password = #{password}
	</update>

    <delete id="deleteBatch">
        update sys_user set is_enabled = 0,modify_date = GETDATE(),modifier = #{modifierId} where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        <!--delete from sys_user_role where user_id in-->
        <!--<foreach item="userId" collection="array" open="(" separator="," close=")">-->
            <!--#{userId}-->
        <!--</foreach>-->
    </delete>

</mapper>